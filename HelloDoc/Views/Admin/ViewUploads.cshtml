@model DataAccessLayer.CustomModel.RequestFileViewModel
@{
    ViewData["Title"] = "ViewUploads";
    Layout = "~/Views/Shared/_Layout4.cshtml";
}
<partial name="ToasterPartialView"></partial>
<div class="container   mt-4" id="view">
    <div class="d-flex justify-content-between my-3">
        <div class="d-flex">
            <span class="fs-2 text-muted fw-bold">Documents</span>
        </div>
        <div class="d-flex justify-content-end">
            <a asp-controller="Admin" asp-action="Index" asp-area=""
               class="btn btn-outline-info d-flex align-items-center">
                <span class="material-symbols-outlined"> chevron_left </span> Back
            </a>
        </div>
    </div>

    <div class="container bg-white border mt-4">
        <div><span>Patient Name</span></div>
        <div><spna class="fw-bold text-info">@Model?.Request?.Firstname</spna><span>(@Model?.Request?.Confirmationnumber)</span></div>
        <div class="mb-3"><span class="text-info"></span></div>
        <div><p>Check here for any file that you or doctors of your subsequents have attached for you to review</p></div>

        <form id="patientRequestForm" method="post" enctype="multipart/form-data" asp-action="UploadFile" asp-route-id="@Model?.Requestid">
            <div class="input-group input-group-lg">
                <div id="fileName" asp-for="FileName" class="form-control fs-6 align-middle">
                    Select File
                </div>
                <input type="file" asp-for="File" class="form-control" id="fileInput" hidden  />
                <label class="input-group-text btn btn-info text-light" for="fileInput">
                    <span class="material-symbols-outlined me-2">cloud_upload</span>
                    <span class="d-none d-md-inline">Upload</span>
                </label>
            </div>
            <div class="d-flex justify-content-end mt-2">
                <button class="btn btn-outline-info" type="submit" id="filesubmit">
                    Submit
                </button>
            </div>
        </form>

        <div class="d-flex justify-content-between mt-5">
            <div class="fs-3 mt-2 mx-4">
                <span>Documents</span>
            </div>
            <div class="mt-2 mx-4 fs-3 d-flex justify-content-between">
                <!-- Download All button -->
                <a id="downloadAllBtn" class="btn btn-outline-info ">
                    <span class=" d-none d-md-inline">Download All</span>
                    <span class="material-symbols-outlined d-md-none">cloud_download</span>
                </a>
                <!-- Send Mail button -->
                <a id="sendMailBtn" class="btn btn-outline-info">
                    <span class=" d-none d-md-inline">Send Mail</span>
                    <span class="material-symbols-outlined d-md-none">mail</span>
                </a>
                <!-- Delete All button -->
                <a id="deleteSelectedBtn" class="btn btn-outline-info">
                    <span class=" d-none d-md-inline">Delete All</span>
                    <span class="material-symbols-outlined d-md-none">delete</span>
                </a>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table d-none d-md-table">
                <!-- Hide table on medium-sized views -->
                <thead class="" style="background-color:dimgray!important">
                    <tr>
                        <th scope="col"><input type="checkbox" id="selectAllCheckbox" /></th>
                        <th scope="col">Documents</th>
                        <th scope="col">Updated Date</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Requestwisefileview!=null)
                    {
                        
                    @foreach (var item in Model.Requestwisefileview)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="fileCheckbox" data-filename="@item.Filename" />
                            </td>
                            <td class="filename">
                                @item.Filename
                            </td>
                            <td>
                                <!-- Update with actual updated date -->
                                @Html.DisplayFor(modelitem => item.Createddate)
                            </td>
                            <td class="">
                                <a class="btn btn-outline-info"
                                   href="~/uploads/@item.Filename" target="_blank">
                                    <span class="material-symbols-outlined">cloud_download</span>
                                </a>
                                <button class="btn btn-outline-info deletbtn"
                                        id="deletbtn" data-filename="@item.Filename" data-requestid="@item.Requestid">
                                    <span class="material-symbols-outlined">
                                        delete
                                    </span>
                                </button>
                            </td>
                        </tr>
                    }
                    }
                </tbody>
            </table>
        </div>
        <!-- Document display and actions for medium-sized views -->
        <div class="d-md-none">
            <!-- Iterate through documents -->
            
            @if(Model!=null && Model.Requestwisefileview != null)
            {
            
            @foreach (var item in Model.Requestwisefileview)
            {
                <div class="document border-top border-bottom mb-3 mt-3">
                    <div class="d-flex">
                        <input type="checkbox" class="fileCheckbox" data-filename="@item.Filename" />
                        <p class="filename mx-3">@Html.DisplayFor(modelitem => item.Filename)</p>
                    </div>
                    <p>Updated: @Html.DisplayFor(modelitem => item.Createddate)</p>
                    <div class="d-flex justify-content-beween mb-3">
                        <a class="btn btn-outline-info"
                           href="~/uploads/@item.Filename" target="_blank">
                            <span class="material-symbols-outlined">cloud_download</span>
                        </a>
                        <button class="btn btn-outline-info deletbtn"
                                id="deletbtn" data-filename="@item.Filename" data-requestid="@item.Requestid">
                            <span class="material-symbols-outlined">
                                delete
                            </span>
                        </button>
                    </div>
                </div>
            }
            }
        </div>

    </div>
</div>

<script>
    function removeGuidFromFilename() {
        var filenameElements = document.querySelectorAll('.filename');
        console.log(filenameElements)
        filenameElements.forEach(function (filenameElement) {
            var filename = filenameElement.textContent;

            var cleanedFilename = filename.replace(/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/gi, '');

            filenameElement.textContent = cleanedFilename;
        });
    }
    removeGuidFromFilename();
</script>
<script>
    document.getElementById("fileInput").onchange = function () {
        let path = this.value.substr(this.value.lastIndexOf('\\') + 1);
        document.getElementById("fileName").innerText = path;
    };

    document.getElementById("selectAllCheckbox").addEventListener("change", function () {
        let checkboxes = document.querySelectorAll(".fileCheckbox");
        checkboxes.forEach(function (checkbox) {
            checkbox.checked = document.getElementById("selectAllCheckbox").checked;
        });
    });

    document.getElementById("downloadAllBtn").addEventListener("click", function () {
        // Get selected filenames
        let selectedFiles = [];
        let checkboxes = document.querySelectorAll(".fileCheckbox:checked");
        checkboxes.forEach(function (checkbox) {
            selectedFiles.push(checkbox.dataset.filename);
        });
        if (selectedFiles.length>0) {

        // Download selected files
        selectedFiles.forEach(function (filename) {
            var link = document.createElement("a");
            link.href = "/uploads/" + filename; // Adjust the path accordingly
            link.download = filename;
            link.style.display = "none";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
        }else{
            Swal.fire(
                'Warning!',
                'Please select files to Download .',
                'warning'
            );
        }
    });

    document.getElementById("deleteSelectedBtn").addEventListener("click", function () {
        let selectedFiles = [];
        let checkboxes = document.querySelectorAll(".fileCheckbox:checked");
        checkboxes.forEach(function (checkbox) {
            selectedFiles.push(checkbox.dataset.filename);
        });

        if (selectedFiles.length > 0) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover these files!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete them!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        method: 'POST',
                        url: '/Admin/DeleteSelectedFiles',
                        data: { filenames: selectedFiles },
                        success: function (result) {
                            window.location.href = '/Admin/ViewUploads/@Model?.Requestid';
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
            });
        } else {
            Swal.fire(
                'Warning!',
                'Please select files to Delet.',
                'warning'
            );
        }
    });
    document.getElementById("sendMailBtn").addEventListener("click", function () {
        // Get selected filenames
        let selectedFiles = [];
        let checkboxes = document.querySelectorAll(".fileCheckbox:checked");
        checkboxes.forEach(function (checkbox) {
            selectedFiles.push(checkbox.dataset.filename);
        });

        if (selectedFiles.length > 0) {
            // Display a confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Send Email',
                text: 'Are you sure you want to send an email with the selected files?',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, send it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // User confirmed, proceed with sending email
                    $.ajax({
                        method: 'POST',
                        url: '/Admin/SendEmailWithSelectedFiles',
                        data: { filenames: selectedFiles },
                        success: function (result) {
                            Swal.fire(
                                'Success!',
                                'Email sent successfully!',
                                'success'
                            );
                        },
                        error: function (error) {
                            console.log(error);
                            Swal.fire(
                                'Error!',
                                'Failed to send email.',
                                'error'
                            );
                        }
                    });
                }
            });
        } else {
            Swal.fire(
                'Warning!',
                'Please select files to send in the email.',
                'warning'
            );
        }
    });
    
</script>
