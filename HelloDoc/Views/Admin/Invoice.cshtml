
@{
    ViewData["Title"] = "Invoice";
    Layout = "~/Views/Shared/_Layout4.cshtml";
}
@if (ViewBag.IsPhysician == true)
{
    
<section>
    <div class="w-100 p-3 d-flex flex-column align-items-center">
        <div class="req_form_container w-75 back_div d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center">
                <h3 class="m-0 fw-bold">Timesheets</h3>
            </div>
            <div>
                <a asp-controller="Provider" asp-action="Dashboard" class="back_btn d-flex align-items-center p-2 px-3 fw-semibold" role="button">
                    <p class="m-0"><i class="fa-solid fa-chevron-left"></i>&nbsp;Back</p>
                </a>
            </div>
        </div>
        <div class="req_form_container w-75 shadow p-3">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-center">
                <div class="form-floating mb-2">
                    <select class="form-select" id="dateRangeDropdown" aria-label="Floating label select example">
                    </select>
                    <label for="floatingSelect">Search by Timesheetperiod </label>
                </div>
                <a role="button" id="finalizeLink" class="text-decoration-none btn btn-info px-2 py-1" style="display:none">
                    <span> Finalize Timesheet </span>
                </a>
            </div>
            <div id="timeSheetDetails">
            </div>
        </div>
    </div>
</section>
<script>
    function generateDateOptions() {
        var options = [];
        var today = new Date();
        var currentDay = today.getDate();
        var currentMonth = today.getMonth() + 1; // Months are zero-based
        var currentYear = today.getFullYear();

        options.push({
            text: "Select DateRange"
        });

        var startDate1, endDate1, startDate2, endDate2;

        if (currentDay <= 14) {
            // First option: 1-14 of the previous month
            startDate1 = 1;
            endDate1 = 14;
            options.push({
                value: formatDate(startDate1, currentMonth - 1, currentYear),
                text: formatDate(startDate1, currentMonth - 1, currentYear) + " - " + formatDate(endDate1, currentMonth - 1, currentYear)
            });

            // Second option: 15-end of the previous month
            startDate2 = 15;
            endDate2 = new Date(currentYear, currentMonth - 1, 0).getDate();
            options.push({
                value: formatDate(startDate2, currentMonth - 1, currentYear),
                text: formatDate(startDate2, currentMonth - 1, currentYear) + " - " + formatDate(endDate2, currentMonth - 1, currentYear)
            });
        } else {
            // First option: 15-end of the previous month
            startDate1 = 15;
            endDate1 = new Date(currentYear, currentMonth - 1, 0).getDate();
            options.push({
                value: formatDate(startDate1, currentMonth - 1, currentYear),
                text: formatDate(startDate1, currentMonth - 1, currentYear) + " - " + formatDate(endDate1, currentMonth - 1, currentYear)
            });

            // Second option: 1-14 of the current month
            startDate2 = 1;
            endDate2 = 14;
            options.push({
                value: formatDate(startDate2, currentMonth, currentYear),
                text: formatDate(startDate2, currentMonth, currentYear) + " - " + formatDate(endDate2, currentMonth, currentYear)
            });
        }

        return options;
    }

    function formatDate(day, month, year) {
        var formattedMonth = month < 10 ? '0' + month : month;
        var formattedDay = day < 10 ? '0' + day : day;
        return year + '/' + formattedMonth + '/' + formattedDay;
    }


    // Function to get month name from month number
    function getMonthName(month) {
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        return monthNames[month - 1];
    }

    // Function to populate the dropdown with date options
    function populateDropdown() {
        var dropdown = document.getElementById("dateRangeDropdown");
        var dateOptions = generateDateOptions();

        // Add options to the dropdown
        dateOptions.forEach(function (option) {
            var opt = document.createElement("option");
            opt.value = option.value;
            opt.text = option.text;
            dropdown.add(opt);
        });
    }
    // Call the function to populate the dropdown on page load
    populateDropdown();

    $(document).ready(function () {
        $("#dateRangeDropdown").change(function () {
            // Get the selected value
            var selectedValue = $(this).val();
            checkIsFinalize(selectedValue);
            // myFunctionfortimesheetData(selectedValue);
            // $("#Startdate").val(selectedValue);
            // $("#PhysicianId").val(loginId);

            var dateObj = new Date(selectedValue);

            var date = dateObj.getDate();
            var month = dateObj.getMonth() + 1; // Months are zero-based
            if (date == 1) {
                // $("#AfterDays").val(14);
                var url = '@Url.Action("TimeSheet", "Admin")' + '?startDate=' + selectedValue;
            } else {
                var daysInMonth = new Date(2024, month, 0).getDate();
                // $("#AfterDays").val(daysInMonth - 14);
                var url = '@Url.Action("TimeSheet", "Admin")' + '?startDate=' + selectedValue;
            }

            $('#finalizeLink').attr('href', url).show();

            $.ajax({
                method: "GET",
                url: "/Admin/GetTimesheetDetails",
                data: { StartDate: selectedValue },
                success: function (response) {
                    console.log(response)
                    $("#timeSheetDetails").html(response);

                }
            });

        });
    });

    function checkIsFinalize(selectedValue) {
        $.ajax({
            type: "POST",
            url: "/Admin/IsFinalizeSheet",
            data: { startDate: selectedValue },
            cache: false,
            success: function (response) {
                console.log(response);
                if (response.x == true) {
                    $("#finalizeLink").hide();
                }
                else {
                    $("#finalizeLink").show();
                }
            },
            error: function () {
                toastr.error("Error while checking date");
            }
        });
    }


    </script>
}
else
{

<div class="container">
    <div class="justify-content-between d-flex container-fluid  position-relative ">
        <div class="">
            <h3 class="fw-bolder">
                Timesheets

            </h3>
        </div>
    </div>
    <div class="card border-0 shadow py-4 mb-5 mx-3 mt-3 rounded">
        <div class="text-end mx-2 px-3 d-flex justify-content-between">
            <div class="d-flex">
                <select class="form-select w-100 mx-3" id="physicianDropdown" data-allow-clear="true" tabindex="-1" asp-items="@(new SelectList(ViewBag.ProviderComboBox, "Physicianid", "Firstname"))" data-control="select" data-placeholder="Region">
                    <option id="defaultregion" value="">Select Physician</option>
                </select>
                <div class="dropdown ">
                    <select class="form-select form-select-md" id="timesheets" data-placeholder="Select Period" style="width: 400px;">
                        <option></option>
                    </select>
                </div>
            </div>

            <div class="d-flex">

                <!-- Button trigger modal -->
                <a style="display:none" id="finalizeLink" class="btn btn-outline-info Finalize"> Finalize Timesheet  </a>
            </div>

        </div>
        <div >
            <h4 class="m-5 container" id="notfinalize">
            </h4>
        </div>

        <div id="pendinglist" class="table-responsive  ">
        </div>
        <div id="table" class="table-responsive  " >
            <table class="table table-responsive mt-3 p-3">
                <thead>
                    <tr>
                        <th scope="col" style="width: 10%;">Date</th>
                        <th scope="col" style="width: 9%;">On-Call Hours</th>
                        <th scope="col" style="width: 17%;">Total Hours</th>
                        <th scope="col" style="width: 10%;" class="text-center">Weekend / Holiday</th>
                        <th scope="col" style="width: 16%;">Number of Housecalls</th>
                        <th scope="col" style="width: 17%;">Number of Phone Consults</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider mx-5">
                </tbody>
            </table>
        </div>

    </div>
    <div class="card border-0 shadow py-4 mb-5 mx-3 mt-3 rounded">
        <div class="text-end mx-2 px-3 d-flex justify-content-between">
            <div class="dropdown ">

                <h4 class="fw-bolder"> Timesheets Reimbursement</h4>
            </div>

        </div>
        <div id="tableReimbursement" class="table-responsive  ">
        </div>

    </div>
</div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js" defer></script>


    
    <script>
        var loginId;
        var selectedValue;


        function generateOptions() {
            var options = [];

            // Get the current date
            var currentDate = new Date();
            var currentYear = currentDate.getFullYear();
            var currentMonth = currentDate.getMonth() + 1; // Months are zero-based, so add 1

            // Loop through the previous 6 months
            for (var i = -6; i <= 6; i++) {
                var date = new Date(currentYear, currentMonth + i, 1); // Set the date to the 1st of the month

                var year = date.getFullYear();
                var month = date.getMonth(); // Months are zero-based, so add 1
                var daysInMonth = new Date(year, month, 0).getDate();

                // Add options for the first and second halves of the month
                var firstHalfText = year + "/" + month + "/" + date.getDate() + " - " + year + "/" + month + "/ 14";
                var secondHalfText = year + "/" + month + "/15 - " + year + "/" + month + "/ " + daysInMonth;

                options.push({ id: year + "-" + month + "-1", text: firstHalfText });
                options.push({ id: year + "-" + month + "-15", text: secondHalfText });

                // Set the default selection to the current month
                if (i === 0) {
                    var defaultSelection = (currentDate.getDate() <= 14) ? year + "-" + month + "-1" : year + "-" + month + "-15";
                }
            }

            return { options, defaultSelection };
        }

        $(document).ready(function () {

            

            $('#physicianDropdown').change(function () {
                // Update loginId with the selected value
                loginId = $(this).val();
                checkisfinalize(loginId, selectedValue);
            });

            $("#timesheets").change(function () {
                // Get the selected value
                selectedValue = $(this).val();
                checkisfinalize(loginId, selectedValue);
            });
            function checkisfinalize(loginId, selectedValue) {
                $("#notfinalize").hide();
                $('#table').hide();
                $('#tableReimbursement').hide();
                $('#pendinglist').hide();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("IsFinalizeSheet","Admin")',
                    data: { PhysicianId: loginId, StartDate: selectedValue },
                    cache: false,
                    success: function (response) {

                        console.log(response);
                        if (response.x == true) {
                            myFunction(loginId, selectedValue);
                        }
                        else {

                            $("#notfinalize").show();
                            var providerName = $('#physicianDropdown').find('option:selected').text();
                            console.log(providerName);
                            // Update the message
                            $("#notfinalize").html(providerName + " has not finalized the timesheet in specified time period.");
                        }
                    },
                    error: function () {
                        alert("Error while checking date.");
                    }
                });
            }
            // Get options and default selection
            var { options, defaultSelection } = generateOptions();
            $("#timesheets").select2({
                placeholder: "Select Period",
                data: options
            });
            $("#timesheets").val(defaultSelection).trigger("change");
        });


        function myFunctionfortimesheetData(loginId, selectedValue) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTimesheetDetailsData","Admin")',
                data: { PhysicianId: loginId, StartDate: selectedValue },
                cache: false,
                success: function (response) {
                    $('#table').empty();
                    $('#table').show();
                    $('#tableReimbursement').empty();
                    $('#tableReimbursement').show();
                    if (response == null) {
                        var table = $('<h2 class=" mt-3 p-3">No Record At</h2>');
                        $('#table').append(table);
                        $('#tableReimbursement').append(table);
                        return;
                    }
                    console.log(response);
                    // Clear existing table
                    $('#table').empty();

                    // Create table elements
                    var table = $('<table class="table table-responsive mt-3 p-3"></table>');
                    var thead = $('<thead><tr><th scope="col">Date</th><th scope="col">Shift</th><th scope="col"  class="text-center">NightShift Weekend</th><th scope="col" > Housecall</th><th scope="col" style="width: 13%;"> Housecall Nights Weekend</th><th scope="col" >Phone Consults</th><th scope="col" style="width: 14%;">Phone Consults Nights Weekend</th><th scope="col" >Batch Testing</th></tr></thead>');
                    var tbody = $('<tbody class="table-group-divider mx-5"></tbody>');

                    // Append thead to table
                    table.append(thead);

                    response.timesheetdetails.forEach(function (item) {
                        var totalHours = item.totalhours || 0;
                        var numberofhousecall = item.numberofhousecall || 0;
                        var numberofphonecall = item.numberofphonecall || 0;
                        var date = new Date(item.timesheetdate);
                        var formattedDate = date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });

                        var row = '<tr>' +
                            '<td>' + formattedDate + '</td>' +
                            '<td>' + totalHours + '</td>' +
                            '<td class="text-center">' + (item.isweekend ? '1' : '0') + '</td>' +
                            '<td>' + numberofhousecall + '</td>' +
                            '<td>0</td>' +
                            '<td>' + numberofphonecall + '</td>' +
                            '<td>0</td>' +
                            '<td>0</td>' +
                            '</tr>';
                        tbody.append(row);
                    });

                    // Append tbody to table
                    table.append(tbody);

                    // Append table to the div
                    $('#table').append(table);



                    $('#tableReimbursement').empty();

                    // Create table elements
                    var tabler = $('<table class="table table-responsive mt-3 p-3"></table>');
                    var theadr = $('<thead><tr><th scope="col">Date</th><th scope="col">Item</th><th scope="col"  >Amount</th><th scope="col" > Bill</th><th scope="col" style="width: 13%;">Action</th></tr></thead>');
                    var tbodyr = $('<tbody class="table-group-divider mx-5"></tbody>');

                    // Append thead to table
                    tabler.append(theadr);

                    response.timesheetdetailreimbursements.forEach(function (item) {
                        var totalHours = item.itemname || '-';
                        var amount = item.amount || 0;
                        var bill = item.bill || 0;
                        var date = new Date(item.timesheetdate);
                        var formattedDate = date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });

                        var row = '<tr>' +
                            '<td>' + formattedDate + '</td>' +
                            '<td>' + totalHours + '</td>' +
                            '<td>' + amount + '</td>' +
                            '<td>' + bill + '</td>' +
                            '<td><a target="_blank" class="view-btn btn btn-outline-info" href="/Upload/TimeSheet/' + item.timesheetid + '/' + bill + '">View</a></td>' +
                            '</tr>';
                        tbodyr.append(row);
                    });

                    // Append tbody to table
                    tabler.append(tbodyr);

                    // Append table to the div
                    $('#tableReimbursement').append(tabler);
                },
                error: function () {
                    alert("Error while checking data.");
                }
            });
        }

        $('.view-btn').click(function () {
            var url = $(this).data('url');
            window.open(url, '_blank');
        });
        function myFunction(loginId, selectedValue) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("IsApprovedSheet","Admin")',
                data: { PhysicianId: loginId, StartDate: selectedValue },
                cache: false,
                success: function (response) {

                    console.log(response);
                    if (response.x == true) {
                        myFunctionfortimesheetData(loginId, selectedValue);
                    }
                    else {
                        $('#table').empty();
                        $("#notfinalize").hide();
                        $('#pendinglist').empty();
                        $('#pendinglist').show();

                        var date = new Date(selectedValue); // Set the date to the 1st of the month

                        var year = date.getFullYear();
                        var month = date.getMonth() + 1; // Months are zero-based, so add 1
                        var daysInMonth = new Date(year, month, 0).getDate();

                        // Create table elements
                        var table = $('<table class="table table-responsive mt-3 p-3"></table>');
                        var thead = $('<thead><tr><th scope="col">Start Date</th><th scope="col">End Date</th><th scope="col"  >Status</th><th scope="col" > Action</th></tr></thead>');
                        var tbody = $('<tbody class="table-group-divider mx-5"></tbody>');

                        // Append thead to table
                        table.append(thead);

                        var row = '<tr>' +
                            '<td>' + selectedValue + '</td>' +
                            '<td>' + year + '-' + month + '-' + daysInMonth + '</td>' +
                            '<td>Pending</td>' +

                            '<td><a class="view-btn btn btn-outline-info" href="/Invoice/TimeSheetAddEdit?PhysicianId=' + loginId + '&StartDate=' + selectedValue + '">Approve</a></td>' +

                            '</tr>';
                        tbody.append(row);

                        // Append tbody to table
                        table.append(tbody);

                        // Append table to the div
                        $('#pendinglist').append(table);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr);
                    console.error(status);
                    console.error(error);
                    alert("Error occurred while checking the timesheet approval status.");
                }
            });
        }
    </script>

}
