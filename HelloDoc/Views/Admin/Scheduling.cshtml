@{
	ViewData["Title"] = "Scheduling";
	if (ViewBag.IsPhysician)
	{
		Layout = "~/Views/Shared/_Layout5.cshtml";
	}
	if (!ViewBag.IsPhysician)
	{
		Layout = "~/Views/Shared/_Layout4.cshtml";
	}
}
<partial name="ToasterPartialView"></partial>
<style>
	.fc-daygrid-event {
		cursor: pointer;
	}

	.fc-header-toolbar.fc-header-resources-only {
		background-color: #ff9999;
		border: none;
	}

	.fc-header-toolbar,
	.fc-daygrid-event {
		background-color: #CCCCCC !important; /* or any other color code */
	}


	.fc-timeline-header-row {
		background-color: gray !important;
	}

	.btn22 {
		padding: 0.25rem 0.5rem !important;
	}

	.fc-header-toolbar .fc-button {
		padding: 0.25rem 0.5rem !important;
	}

	.input-group {
		width: 300px;
	}

	#calendar {
		margin-top: 2rem;
	}

	.fc .fc-toolbar-title {
		font-size: 22px;
		font-weight: 600;
	}

	.fc-scrollgrid-sync-inner:has(.fc-col-header-cell-cushion) {
		background-color: #747474;
	}

	.fc .fc-col-header-cell-cushion {
		color: white;
	}

	.fc a {
		color: black;
	}

	.fc-daygrid-day-top {
		background-color: #ec9aef;
	}

	.fc .fc-button-group {
		display: block;
	}

	.fc-button {
		margin: 10px;
	}

	.fc-direction-ltr .fc-button-group > .fc-button:not(:last-child) {
		background: none;
		border: 1px solid #02BCE6;
		color: #02BCE6;
		border-radius: 5px;
		margin: 3px;
	}

	.fc-direction-ltr .fc-button-group > .fc-button:last-child {
		background: none;
		border: 1px solid #02BCE6;
		color: #02BCE6;
		border-radius: 5px;
		margin: 3px;
	}

	.fc .fc-button-primary:not(:disabled).fc-button-active:focus, .fc .fc-button-primary:not(:disabled):active:focus {
		box-shadow: none;
	}

	.fc .fc-button-group > .fc-button.fc-button-active {
		background-color: #02BCE6;
		color: white;
	}

	.fc-toolbar-title {
		font-weight: 600;
	}

	.fc-next-button.fc-button.fc-button-primary {
		padding: 4px 5px;
		border-radius: 50px;
	}

	.fc-prev-button.fc-button.fc-button-primary {
		padding: 4px 5px;
		border-radius: 50px;
	}

	.fc-direction-ltr {
		padding: 4px 5px;
		border-radius: 50px;
	}
</style>
<div class="container">
	<div class="row justify-content-center ">
		<div class="">
			<div class="d-flex justify-content-between my-3">
				<div class="d-flex">
					@if (ViewBag.IsPhysician)
					{
						<span class="fs-2 text-muted fw-bold">My Scheduling</span>
					}
					@if (!ViewBag.IsPhysician)
					{
						<span class="fs-2 text-muted fw-bold">Scheduling</span>
					}
				</div>
				<div class="d-flex justify-content-end">
					@if (ViewBag.IsPhysician)
					{

						<a asp-controller="Provider" asp-action="Index" asp-area=""
						   class="btn btn-outline-info d-flex align-items-center">
							<span class="material-symbols-outlined"> chevron_left </span> Back
						</a>
					}
					@if (!ViewBag.IsPhysician)
					{
						<a asp-controller="Admin" asp-action="Index" asp-area=""
						   class="btn btn-outline-info d-flex align-items-center">
							<span class="material-symbols-outlined"> chevron_left </span> Back
						</a>
					}
				</div>
			</div>
			<div class="container d-flex flex-column  shadow">
				<div class="row mb-0 py-2 pe-2 rounded-3">
					@if (!ViewBag.IsPhysician)
					{

						<div class="d-lg-flex  justify-content-between pe-1 pt-3">
							<div class="col-xl-3  col-lg-3 col-md-12 col-sm-12 col-xs-12 col-12">
								<select class="form-select " aria-label="Default select example" id="regionselect">

									<option selected value="0">All Region</option>
									@if (ViewBag.Regions != null)
									{

										@foreach (var region in ViewBag.Regions)
										{
											<option value="@region.Regionid">@region.Name</option>
										}
									}

								</select>
							</div>
							<div class="mt-3">
								<a asp-action="ProviderOnCall" class="btn btn-info rounded-2 p-2 ">Provider On Call</a>
								<a asp-action="ShiftReview" class="btn btn-info rounded-2 p-2 ">Shift For Review</a>
								<a data-bs-toggle="modal" data-bs-target="#createShiftModal" class="btn btn-info rounded-2 p-2">
									Add New Shift
								</a>
							</div>
						</div>
					}
				</div>

				<div class="row my-2">
					<div class="col-md-7 mt-2">
						<div id="calendarTitle" class="calendar-current-date fs-4 fw-bolder"></div>
						<div class="text-start my-3 calendar-navigation">
							<span id="calendar-prev" class="btn btn-info text-white rounded-circle" onclick="calendar.prev()">❮</span>
							<span class="mx-1" id="calendar-icon" style="cursor: pointer;">
								<i class="bi bi-calendar-day-fill fs-3"></i>
							</span>
							<input type="date" id="date" name="date" class="d-none">


							<span id="calendar-next" class="btn btn-info text-white rounded-circle" onclick="calendar.next()">❯</span>
						</div>
					</div>
					<div class="col-md-5 mt-3">
						<div class="d-flex justify-content-end">
							<div class="alert   mx-1 px-4" role="alert" style="background-color:#F4CAED">
							</div>
							<span class="mx-1">Panding Shifts</span>
							<!-- Button trigger modal -->
							<div class="alert alert-success mx-1 px-4" role="alert">
							</div>
							<span class="mx-1">Appoved Shifts</span>

						</div>
						<div class="d-flex justify-content-end">
							@if (!ViewBag.IsPhysician)
							{

								<div id="day" class="btn btn-outline-info  mx-2" onclick="calendar.changeView('resourceTimelineDay')">
									Day
								</div>
								<!-- Button trigger modal -->
								<div id="week" class="btn btn-outline-info mx-2" onclick="calendar.changeView('resourceTimelineWeek')">
									Week
								</div>
								<div id="month" class="btn btn-outline-info mx-2" onclick="calendar.changeView('dayGridMonth')">
									Month
								</div>
							}
							@if (ViewBag.IsPhysician)
							{
								<a data-bs-toggle="modal" data-bs-target="#createShiftModal" class="btn btn-success rounded-2 p-2">
									Add New Shift
								</a>
							}
						</div>
					</div>
				</div>
				<div id="calendar" style="min-height:38vh">
				</div>
			</div>
		</div>
	</div>

</div>
<div id="case2">
</div>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.11/index.global.min.js"></script>
<script>
	var calendar;

	document.addEventListener('DOMContentLoaded', function () {
		document.getElementById('calendar-icon').addEventListener('click', function () {
			var dateInput = document.getElementById('date');
			dateInput.focus(); // Focus on the date input
		});
		var calendarView = localStorage.getItem("calendarView");
		if (calendarView) {
			calendar.changeView(calendarView);
		}
		var calendarEl = document.getElementById('calendar');
		var selectedRegion = $('#regionselect').val();
		console.log(selectedRegion)
		getPhysicianShift(selectedRegion);
		function getPhysicianShift(region) {
			fetch('/Admin/GetPhysicianShift?region=' + region)
				.then(response => response.json())
				.then(data => {
					const resources = data.map(physician => ({
						id: physician.physicianid,
						title: physician.firstname,
					}));


					fetch('/Admin/GetEvents?region=' + region)
						.then(response => response.json())
						.then(data => {
							console.log(data)
							const events = data.map(event => ({
								id: event.id,
								resourceId: event.resourceId,
								title: event.title,
								start: event.start,
								end: event.end,
								eventBackgroundColor: event.status === 1 ? '#32d97d' : '#e39de8',
								color: event.status === 1 ? '#e39de8' : '#32d97d',
								ShiftDetailId: event.shiftDetailId,
								region: event.region,
								status: event.status
							}));

							initializeCalendar(resources, events);
						})
						.catch(error => console.error(error));
				})
				.catch(error => console.error(error));
		}
		function initializeCalendar(resources, events) {

			$('#regionselect').on('change', function () {
				const newRegion = $(this).val();
				getPhysicianShift(newRegion);
			});
			console.log(resources)
			calendar = new FullCalendar.Calendar(calendarEl, {
				height: 'auto',
				schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
				themeSystem: 'bootstrap5',
				headerToolbar: false,
				eventOverlap: false,
				initialView: 'dayGridMonth',
				eventMaxStack: 1,
				// editable:true
				dayMaxEvents: 4,
				views: {
					resourceTimelineDay: {
						buttonText: 'Day',
					},
					resourceTimelineWeek: {
						dayMaxEventRows: 3,
						buttonText: 'Week',
						slotDuration: { days: 1 },
						slotLabelInterval: { days: 1 },
						slotMinTime: '00:00:00',
						slotMaxTime: '23:59:59',
						slotLabelFormat: {
							omitWeekday: false,
							weekday: 'short',
							day: '2-digit',
							omitCommas: true,
							meridiem: 'short'
						},
					},
					resourceTimelineMonth: {
						buttonText: 'Month',
					}
				},
				datesSet: function (info) {
					var title = info.view.title;
					$("#calendarTitle").html(title);
					if (calendar.view.type === 'resourceTimelineWeek') {
						calendar.setOption('slotDuration', { days: 1 });

					} else {
						calendar.setOption('slotDuration', '01:00:00');
					}
				},
				resources: resources,
				events: events,
				eventLimit: 3,
				eventLimitText: "More",
				eventMouseEnter: function (info) {
					new bootstrap.Tooltip(info.el, {
						title: info.event.title + ' (' + formatDate(info.event.start) + ' - ' + formatDate(info.event.end) + ')',
						placement: 'top',
						trigger: 'hover',
						html: true
					});
				},
				eventMouseLeave: function (info) {
					$(info.el).tooltip('dispose');
				},
				eventDragStart: function (info) {
					// Allow the event to be dragged and dropped
					return true;
				},
				eventDrop: function (info) {
					var shiftDetailId = info.event.extendedProps.ShiftDetailId;
					var startDate = formatDate(info.event.start);
					var endDate = formatDate(info.event.end);
					var region = info.event.extendedProps.region;

					// Call AJAX request to update the event's start and end dates
					$.ajax({
						url: '/Admin/UpdateShiftDates',
						type: 'POST',
						data: {
							shiftDetailId: shiftDetailId,
							startDate: startDate,
							endDate: endDate,
							region: region
						},
						success: function (response) {
							// Handle success
						},
						error: function (xhr, status, error) {
							// Handle error
						}
					});
				},

				eventClick: function (info) {
					var shiftDetailId = info.event.extendedProps.ShiftDetailId;
					var region = info.event.extendedProps.region;
					$('#eventModal').modal('show');
					$('#eventModal').on('click', '#editbtn', function () {
						$('#editbtn').addClass('d-none');
						$('#savebtn').removeClass('d-none');
						$('#StartDateView').prop('disabled', false);
						$('#StartTimeView').prop('disabled', false);
						$('#EndTimeView').prop('disabled', false);
					});


					// Get the ShiftDetailId from the event's extendedProps

					console.log(region)
					// Populate modal content with event details
					var event = info.event;
					var modalBody = document.querySelector('#eventModal .modal-body');
					var eventDetails = `
								<form asp-action="viewshift">
								<input class="d-none" id="shiftDetailId" value="${shiftDetailId}">
								   <div class="form-floating mb-3 mt-3">
							<select class="form-control" aria-label="Default select example" id="selectregion" disabled>
									<option value="${region[0].name}">${region[0].name}</option>

							</select>
						</div>
								<div class="form-floating mb-3 mt-3">
												<select class="form-select pt-1 physicianDropdown" asp-for="Physicianid" id="physicianSelect" aria-label="Default select example" disabled>
												<option value="" selected disabled>${event.title}</option>
											</select>
										</div>
												<div class="col-md-12 form-floating mb-3">
								<input id="StartDateView" class="form-control rounded vcs" name="Startdate" type="date" placeholder="Suchtext" autocomplete="off" value="${formatDate(event.start)}" disabled>
						<label for="StartDate">Shifted Date</label>
						<div class="d-flex gap-2 mt-3">
						<div class="col-md-6 form-floating mb-3">
								<input id="StartTimeView" asp-for="Starttime" disabled class="form-control rounded vcs" name="Starttime" type="time" placeholder="Suchtext" autocomplete="off" value="${formatTime(event.start)}" >
						<label for="StartTime">Start</label>
					</div>
					<div class="col-md-6 form-floating mb-3">
								<input id="EndTimeView" asp-for="Endtime" disabled	 class="form-control rounded vcs" name="Endtime" type="time" placeholder="Suchtext" autocomplete="off" value="${formatTime(event.end)}" >
						<label for="EndTime">End</label>
					</div>
					</div>
						<div class="d-flex justify-content-end gap-2">
	@if (!ViewBag.IsPhysician)
	{

			<button class="btn btn-info" id="returnshift"  type="button">Return</button>
					<button class="btn btn-info" id="editbtn" type="button">Edit</button>
						<button class="btn btn-success d-none" id="savebtn"  type="button">Save</button>
					<button class="btn btn-danger" id="deletebtn" type="button">Delete</button>
	}
			</div>
					</form>
									`;
					modalBody.innerHTML = eventDetails;
				},
				eventBackgroundColor: function (event) {
					return event.eventBackgroundColor;
				},
				resourceLabelDidMount: function (resourceObj) {
					const img = document.createElement('img');
					const imgUrl = resourceObj.resource.extendedProps.imageUrl || `/Physician/${resourceObj.el.dataset.resourceId}/photo.png`;
					img.src = imgUrl;
					console.log(imgUrl);
					img.style.maxHeight = '40px';
					img.style.float = 'left';
					resourceObj.el.querySelector('.fc-datagrid-cell-main').appendChild(img);
				},
				dateClick: function (info) {
					var shiftedDateISO = info.dateStr;
					var shiftedDate = shiftedDateISO.split('T')[0];
					var startTime = new Date(info.date).toISOString().substr(11, 5);

					$('#StartDate').val(shiftedDate);
					$('#StartTime').val(startTime);

					// Open the create shift modal
					$('#createShiftModal').modal('show');
				},

			});



			function switchView() {
				console.log(calendar.view.type)
				if (window.screen.width < 700) {
					if (calendar.view.type === 'resourceTimelineWeek') {
						calendar.changeView('dayGridWeek');
					}
					if (calendar.view.type === 'resourceTimelineDay') {
						$('.fc-daygrid-day-events').text("0/24");
						calendar.changeView('timeGridDay');
					}
				} else {
					if (calendar.view.type === 'dayGridWeek') {
						calendar.changeView('resourceTimelineWeek');
					}
					if (calendar.view.type === 'timeGridDay') {
						calendar.changeView('resourceTimelineDay');
					}
				}
			}
			switchView();
			window.addEventListener('resize', switchView);


			calendar.render();

			calendar.on('eventDrop', function (info) {
				var shiftDetailId = info.event.extendedProps.ShiftDetailId;
				var startDate = formatDate(info.event.start);
				var endDate = formatDate(info.event.end);
				var region = info.event.extendedProps.region;

				// Call AJAX request to update the event's start and end dates
				$.ajax({
					url: '/Admin/UpdateShiftDates',
					type: 'POST',
					data: {
						shiftDetailId: shiftDetailId,
						startDate: startDate,
						endDate: endDate,
						region: region
					},
					success: function (response) {
						// Handle success
					},
					error: function (xhr, status, error) {
						// Handle error
					}
				});
			});
		}
	});

</script>


<partial name="CreateShiftPartial"></partial>

<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header bg-info">
				<h5 class="modal-title" id="eventModalLabel">Event Details</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
			</div>

		</div>
	</div>
</div>
<script>
	function formatDate(dateString) {
		const date = new Date(dateString);
		const year = date.getFullYear();
		let month = (date.getMonth() + 1).toString().padStart(2, '0');
		let day = date.getDate().toString().padStart(2, '0');
		return `${year}-${month}-${day}`;
	}
</script>
<script>
	$('#eventModal').on('click', '#returnshift', function () {
		console.log("sdfs")

		var shiftDetailId = $('#shiftDetailId').val();
		var selectedRegion = $('#selectregion').val();


		// Assuming you have an input field with id 'shiftDetailId' in your modal
		$.ajax({
			url: '/Admin/ReturnShift',
			type: 'POST',
			data: { shiftDetailId: shiftDetailId, region: selectedRegion },
			success: function (response) {
				// Handle success
				$('#eventModal').modal('hide');
				const events = response.events.map(event => ({
					id: event.id,
					resourceId: event.resourceId,
					title: event.title,
					start: event.start,
					end: event.end,
					eventBackgroundColor: event.status == 1 ? '#e39de8' : '#32d97d',
					color: event.status === 0 ? '#32d97d' : '#e39de8',
					ShiftDetailId: event.shiftDetailId,
					region: event.region
				}));
				calendar.removeAllEvents();
				calendar.addEventSource(events);
				calendar.refetchEvents();

			},
			error: function (xhr, status, error) {
			}
		});
	});

	$('#eventModal').on('click', '#deletebtn', function () {
		var shiftDetailId = $('#shiftDetailId').val();
		var selectedRegion = $('#selectregion').val();

		$.ajax({
			url: '/Admin/DeleteShift',
			type: 'POST',
			data: { shiftDetailId: shiftDetailId, region: selectedRegion },
			success: function (response) {
				$('#eventModal').modal('hide');
				const events = response.events.map(event => ({
					id: event.id,
					resourceId: event.resourceId,
					title: event.title,
					start: event.start,
					end: event.end,
					eventBackgroundColor: event.status == 1 ? '#e39de8' : '#32d97d',
					color: event.status === 0 ? '#32d97d' : '#e39de8',
					ShiftDetailId: event.shiftDetailId,
					region: event.region
				}));
				calendar.removeAllEvents();
				calendar.addEventSource(events);
				calendar.refetchEvents();
			},
			error: function (xhr, status, error) {
			}
		});
	});

	$('#eventModal').on('click', '#savebtn', function () {
		// Get data to be saved
		var shiftDetailId = $('#shiftDetailId').val(); // Assuming you have an input field with id 'shiftDetailId' in your modal
		var startDate = $('#StartDateView').val();
		var startTime = $('#StartTimeView').val();
		var endTime = $('#EndTimeView').val();
		var selectedRegion = $('#selectregion').val();

		console.log(shiftDetailId);
		$.ajax({
			url: '/Admin/SaveShift',
			type: 'POST',
			data: {
				shiftDetailId: shiftDetailId,
				startDate: startDate,
				startTime: startTime,
				endTime: endTime,
				region: selectedRegion
			},
			success: function (response) {
				$('#eventModal').modal('hide');

				const events = response.events.map(event => ({
					id: event.id,
					resourceId: event.resourceId,
					title: event.title,
					start: event.start,
					end: event.end,
					eventBackgroundColor: event.status == 0 ? '#e39de8' : '#32d97d',
					color: event.status === 0 ? '#32d97d' : '#e39de8',
					ShiftDetailId: event.shiftDetailId,
					region: event.region
				}));
				calendar.removeAllEvents(); // Remove existing events
				calendar.addEventSource(events); // Add updated events
				calendar.refetchEvents(); // Refetch events from the event sources

				// Hide the save button and show the edit button
				$('#savebtn').addClass('d-none');
				$('#editbtn').removeClass('d-none');
			},
			error: function (xhr, status, error) {
				// Handle error
			}
		});
	});



	// Function to format time to HH:mm
	function formatTime(dateString) {
		const date = new Date(dateString);
		let hours = date.getHours().toString().padStart(2, '0');
		let minutes = date.getMinutes().toString().padStart(2, '0');
		return `${hours}:${minutes}`;
	}
</script>
