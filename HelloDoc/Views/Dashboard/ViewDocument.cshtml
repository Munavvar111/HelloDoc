@model DataAccessLayer.CustomModel.RequestFileViewModel
@{
    Layout = "~/Views/Shared/_Layout3.cshtml";
}

<div class="container bg-white border mt-4">
    <div class="d-flex justify-content-between my-3">
        <div class="d-flex">
            <span class="fs-2 text-muted fw-bold">Documents</span>
        </div>
        <div class="d-flex justify-content-end">
            <a asp-controller="Dashboard" asp-action="Index" asp-area=""
               class="btn btn-outline-info d-flex align-items-center">
                <span class="material-symbols-outlined"> chevron_left </span> Back
            </a>
        </div>
    </div>

    <div>
        <div><span>Patient Name</span></div>
        <div class="mb-3"><span class="text-info"></span></div>
        <div><p>Check here for any file that you or doctors of your subsequents have attached for you to review</p></div>

        <form id="patientRequestForm" method="post" enctype="multipart/form-data" asp-action="UploadFile" asp-route-requestid="@Model.Requestid">
            <div class="input-group input-group-lg">
                <div id="fileName" asp-for="FileName" class="form-control fs-6 align-middle">
                    Select File
                </div>
                <input type="file" asp-for="File" class="form-control" id="fileInput" hidden />
                <label class="input-group-text btn btn-info text-light" for="fileInput">
                    <span class="material-symbols-outlined me-2">cloud_upload</span>
                    <span class="d-none d-md-inline">Upload</span>
                </label>
            </div>
            <div class="d-flex justify-content-end mt-2">
                <button class="btn btn-outline-info" type="button" id="paatientFile">
                    Submit
                </button>
            </div>
        </form>

        <div class="d-flex justify-content-between mt-5">
            <div class="fs-3 mt-2 mx-4">
                <span>Documents</span>
            </div>
            <div class="mt-2 mx-4 fs-3">
                <a id="downloadAllBtn" class="btn btn-outline-info">Download All</a>
            </div>
        </div>

        <div class="">
            <table class="table d-none d-md-table" style="vertical-align:middle;">
                <thead class="thead-secondry">
                    <tr>
                        <th scope="col"><input type="checkbox" class="selectAllCheckbox" /></th>
                        <th scope="col">FileName</th>
                        <th scope="col">Uploader</th>
                        <th scope="col">Updated Date </th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Requestwisefileview != null)
                    {
                        
                    @foreach (var item in Model.Requestwisefileview)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="fileCheckbox" data-filename="@item.Filename" />

                            </td>
                            <td>
                                <div class="filename">@item.Filename</div>
                            </td>
                            <td>
                                test tester 
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.Createddate)
                            </td>
                            <td>
                                <a class="btn btn-outline-info"
                                   href="~/uploads/@item.Filename" target="_blank">
                                    <span class="material-symbols-outlined">cloud_download</span>
                                </a>
                            </td>
                        </tr>
                    }
                    }
                </tbody>
            </table>
        </div>
        <div class="d-md-none">
            <!-- Iterate through documents -->
            @if (Model != null && Model.Requestwisefileview != null)
            {
                <input type="checkbox" class="selectAllCheckbox" />
                @foreach (var item in Model.Requestwisefileview)
                {
                    <div class="document border-top border-bottom mb-3 mt-3">
                        <div class="d-flex">
                            <input type="checkbox" class="fileCheckbox" data-filename="@item.Filename" />
                            <p class="filename mx-3">@Html.DisplayFor(modelitem => item.Filename)</p>
                        </div>
                        <p>Updated: @Html.DisplayFor(modelitem => item.Createddate)</p>
                        <div class="d-flex justify-content-beween mb-3 gap-3">
                            <a class="btn btn-outline-info"
                               href="~/uploads/@item.Filename" target="_blank">
                                <span class="material-symbols-outlined">cloud_download</span>
                            </a>
                            
                        </div>
                    </div>
                }
            }
        </div>

    </div>
</div>
<script>
    function removeGuidFromFilename() {
        var filenameElements = document.querySelectorAll('.filename');
        console.log(filenameElements)
        filenameElements.forEach(function (filenameElement) {
            var filename = filenameElement.textContent;

            var cleanedFilename = filename.replace(/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/gi, '');

            filenameElement.textContent = cleanedFilename;
        });
    }
    removeGuidFromFilename();
    document.getElementById("fileInput").onchange = function () {
        let path = this.value.substr(this.value.lastIndexOf('\\') + 1);
        document.getElementById("fileName").innerText = path;
    };
    document.getElementById("paatientFile").addEventListener("click", function () {
        if (document.getElementById("fileInput").files.length === 0) {
            Swal.fire({
                title: 'Warning!',
                text: 'Please select a file to upload.',
                icon: 'warning',
                showConfirmButton: true,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    return false;
                }
            });
        } else {
            document.getElementById("patientRequestForm").submit();
        }
    });
    function updateSelectAllCheckbox() {
        var container = $('.d-none.d-md-table').is(':visible') ? ".d-none.d-md-table" : ".d-md-none";
        var allChecked = true;
        $(container + ' .fileCheckbox').each(function () {
            if (!$(this).prop("checked")) {
                allChecked = false;
                return false; // exit the loop early if any checkbox is not checked
            }
        });
        $(container + ' .selectAllCheckbox').prop("checked", allChecked);
    }

    // Function to handle the "Select All" checkbox change and individual checkbox changes
    $(".selectAllCheckbox").change(function () {
        var isChecked = $(this).prop("checked");
        var container = $(this).closest('.d-none.d-md-table, .d-md-none');
        container.find('.fileCheckbox').prop("checked", isChecked);
    });

    $(".fileCheckbox").change(function () {
        updateSelectAllCheckbox();
    });


    $("#downloadAllBtn").on("click", function () {
        // Get selected filenames
        var selectedFiles = [];

        var container = $('.d-none.d-md-table').is(':visible') ? '.d-none.d-md-table' : '.d-md-none';
        $(container + ' .fileCheckbox:checked').each(function () {
            selectedFiles.push($(this).data("filename"));
        });

        if (selectedFiles.length > 0) {

            // Download selected files
            selectedFiles.forEach(function (filename) {
                var link = document.createElement("a");
                link.href = "/uploads/" + filename; // Adjust the path accordingly
                link.download = filename;
                link.style.display = "none";
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
        } else {
            Swal.fire(
                'Warning!',
                'Please select files to Download .',
                'warning'
            );
        }
    });

    document.getElementById("fileInput").onchange = function () {
        let path = this.value.substr(this.value.lastIndexOf('\\') + 1);
        document.getElementById("fileName").innerText = path;

        // Check if the selected file is not a PDF
        if (!path.toLowerCase().endsWith('.pdf')) {
            Swal.fire(
                'Warning!',
                'Please select a PDF file.',
                'warning'
            );
            // Reset the file input to clear the selection
            this.value = '';
            document.getElementById("fileName").innerText = 'Select File';
        }
    };

</script>
